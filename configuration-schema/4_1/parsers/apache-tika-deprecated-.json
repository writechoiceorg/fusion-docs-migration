{
  "type": "object",
  "title": "Apache Tika",
  "description": "Parse Office documents (ppt/docx/pdf), HTML files, images (jpeg/tiff), and more. See \"Supported Formats\" at https://tika.apache.org/ for a full list",
  "required": [
    "type"
  ],
  "properties": {
    "id": {
      "type": "string",
      "title": "Parser ID",
      "default": "dce34c59-72b8-4925-bebd-83e6c4e48c9e"
    },
    "label": {
      "type": "string",
      "title": "Label",
      "description": "A label for this Parser Stage",
      "maxLength": 255
    },
    "enabled": {
      "type": "boolean",
      "title": "Enable this Parser Stage",
      "default": true
    },
    "mediaTypes": {
      "type": "array",
      "title": "Media Types for this Parser Stage",
      "items": {
        "type": "string",
        "pattern": "^[^\\/]+\\/[^\\/]+$",
        "format": "rfc2646"
      }
    },
    "pathPatterns": {
      "type": "array",
      "title": "File names to parse",
      "description": "Specify a file name or pattern that must be matched for this parser stage to run. Forward slashes (\"/\") are used to join names of files inside archives with the archive name.",
      "items": {
        "type": "object",
        "properties": {
          "syntax": {
            "type": "string",
            "title": "Pattern type",
            "description": "glob uses bash shell-style wildcards; regex uses Java (PCRE-style) regex",
            "enum": [
              "glob",
              "regex"
            ],
            "default": "glob"
          },
          "pattern": {
            "type": "string",
            "title": "File name or pattern",
            "description": "e.g.: \"z.txt\" or \"*.md\" or \"/a/*/b/f.txt\" for glob; \"z.txt$\" or \".*\\.txt$\" or \"^/a/[^\\/]*/b/f.txt$\" for regex"
          }
        }
      }
    },
    "inheritMediaTypes": {
      "type": "boolean",
      "title": "use default media types for this Parser Stage",
      "description": "Indicates if parser stage should use the default media types.  Unchecking this box means that ONLY the manually configured media types will be parsed by the parser and you then MUST provide at least one media type.",
      "default": true
    },
    "errorHandling": {
      "type": "string",
      "title": "Error Handling",
      "enum": [
        "ignore",
        "log",
        "fail",
        "mark"
      ],
      "default": "mark"
    },
    "outputFieldPrefix": {
      "type": "string",
      "title": "Prefix parsed fields with",
      "description": "Fields extracted by this parser will be prefixed with this string. The remainder of the field name will be as detected in the stream",
      "maxLength": 20,
      "pattern": "^$|^[A-Za-z_][A-Za-z0-9_\\-\\.]+$"
    },
    "includeImages": {
      "type": "boolean",
      "title": "Include images",
      "default": false
    },
    "flattenCompound": {
      "type": "boolean",
      "title": "Flatten compound documents",
      "default": false
    },
    "addFailedDocs": {
      "type": "boolean",
      "title": "Add failed documents",
      "default": false
    },
    "addOriginalContent": {
      "type": "boolean",
      "title": "Add original document content (raw bytes)",
      "default": false
    },
    "contentEncoding": {
      "type": "string",
      "title": "Content transport encoding of the content (per RFC1341)",
      "enum": [
        "binary",
        "base64"
      ],
      "default": "binary"
    },
    "returnXml": {
      "type": "boolean",
      "title": "Return parsed content as XML",
      "default": false
    },
    "keepOriginalStructure": {
      "type": "boolean",
      "title": "Return original XML and HTML instead of Tika XML output (only applies if 'Return parsed content as XML is true')",
      "default": false
    },
    "extractHtmlLinks": {
      "type": "boolean",
      "title": "Extract XHTML links",
      "description": "Collect links explicitly declared in document structure (e.g. using HTML tags, bookmarks, etc)",
      "default": true
    },
    "extractOtherLinks": {
      "type": "boolean",
      "title": "Extract other links",
      "description": "Use regex-based heuristic extractor to collect likely links from plain text content in all fields.",
      "default": false
    },
    "excludeContentTypes": {
      "type": "array",
      "title": "Content types to exclude",
      "description": "List of content types to exclude from parsing",
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "zipBombCompressionRatio": {
      "type": "integer",
      "title": "Maximum input-to-output byte ratio",
      "description": "Maximum number of output bytes fusion will generate per input byte. If you are indexing highly compressed files, you may increase this value to avoid triggering 'Zip Bomb' detection",
      "default": 200
    },
    "zipBombMaxDepth": {
      "type": "integer",
      "title": "Maximum nesting depth",
      "description": "Returns the maximum XML element nesting level. If you are indexing highly nested files, you may increase this value to avoid triggering 'Zip Bomb' detection",
      "default": 200
    },
    "zipBombMaxPackageEntryDepth": {
      "type": "integer",
      "title": "Maximum package entry depth",
      "description": "Sets the maximum package entry nesting level. If you are indexing highly nested files, you may increase this value to avoid triggering 'Zip Bomb' detection",
      "default": 20
    },
    "type": {
      "type": "string",
      "enum": [
        "tika"
      ],
      "default": "tika"
    }
  },
  "additionalProperties": false,
  "category": "Other",
  "categoryPriority": 1
}
