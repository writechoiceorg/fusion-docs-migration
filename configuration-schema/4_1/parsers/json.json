{
  "type": "object",
  "title": "JSON",
  "description": "Parses JSON documents with optional splitting and mappings",
  "required": [
    "type"
  ],
  "properties": {
    "id": {
      "type": "string",
      "title": "Parser ID",
      "default": "c7f5af62-557c-421a-b610-09518921dbc2"
    },
    "label": {
      "type": "string",
      "title": "Label",
      "description": "A label for this Parser Stage",
      "maxLength": 255
    },
    "enabled": {
      "type": "boolean",
      "title": "Enable this Parser Stage",
      "default": true
    },
    "mediaTypes": {
      "type": "array",
      "title": "Media Types for this Parser Stage",
      "items": {
        "type": "string",
        "pattern": "^[^\\/]+\\/[^\\/]+$",
        "format": "rfc2646"
      }
    },
    "pathPatterns": {
      "type": "array",
      "title": "File names to parse",
      "description": "Specify a file name or pattern that must be matched for this parser stage to run. Forward slashes (\"/\") are used to join names of files inside archives with the archive name.",
      "items": {
        "type": "object",
        "properties": {
          "syntax": {
            "type": "string",
            "title": "Pattern type",
            "description": "glob uses bash shell-style wildcards; regex uses Java (PCRE-style) regex",
            "enum": [
              "glob",
              "regex"
            ],
            "default": "glob"
          },
          "pattern": {
            "type": "string",
            "title": "File name or pattern",
            "description": "e.g.: \"z.txt\" or \"*.md\" or \"/a/*/b/f.txt\" for glob; \"z.txt$\" or \".*\\.txt$\" or \"^/a/[^\\/]*/b/f.txt$\" for regex"
          }
        }
      }
    },
    "inheritMediaTypes": {
      "type": "boolean",
      "title": "use default media types for this Parser Stage",
      "description": "Indicates if parser stage should use the default media types.  Unchecking this box means that ONLY the manually configured media types will be parsed by the parser and you then MUST provide at least one media type.",
      "default": true
    },
    "errorHandling": {
      "type": "string",
      "title": "Error Handling",
      "enum": [
        "ignore",
        "log",
        "fail",
        "mark"
      ],
      "default": "mark"
    },
    "outputFieldPrefix": {
      "type": "string",
      "title": "Prefix parsed fields with",
      "description": "Fields extracted by this parser will be prefixed with this string. The remainder of the field name will be as detected in the stream",
      "maxLength": 20,
      "pattern": "^$|^[A-Za-z_][A-Za-z0-9_\\-\\.]+$"
    },
    "rootPath": {
      "type": "string",
      "title": "Root path",
      "description": "Use only children of this JSON pointer."
    },
    "includePath": {
      "type": "boolean",
      "title": "Include root path",
      "description": "Include parent element names when using a root path.",
      "default": false
    },
    "splitArrays": {
      "type": "boolean",
      "title": "Split arrays",
      "description": "First split top-level arrays into multiple documents, and then apply other rules.",
      "default": true
    },
    "mappings": {
      "type": "array",
      "title": "Mapping rules",
      "description": "Extract parts of the document into specified fields",
      "items": {
        "type": "object",
        "required": [
          "path",
          "target"
        ],
        "properties": {
          "path": {
            "type": "string",
            "title": "JSONPath expression"
          },
          "target": {
            "type": "string",
            "title": "Target field"
          }
        }
      }
    },
    "listHandling": {
      "type": "string",
      "title": "JSON List handling",
      "description": "Create a single multivalued field containing all items, or a separate index-numbered field per list item?",
      "enum": [
        "multivalued",
        "index_numbered"
      ],
      "default": "multivalued",
      "hints": [
        "advanced"
      ]
    },
    "type": {
      "type": "string",
      "enum": [
        "json"
      ],
      "default": "json"
    }
  },
  "additionalProperties": false,
  "category": "Other",
  "categoryPriority": 1
}
