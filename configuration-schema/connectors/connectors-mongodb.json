{
  "type" : "object",
  "title" : "MongoDB",
  "description" : "Crawl a MongoDB database. For recrawls, the crawler can use the oplog in MongoDB to discover new content and updates to existing content (updated or removed documents). If a full re-synchronization is required, it can be done by de-selecting the oplog option and starting the crawl again.",
  "required" : [ "id", "connector", "type", "pipeline", "properties" ],
  "properties" : {
    "category" : {
      "type" : "string",
      "title" : "Category",
      "default" : "Database",
      "hints" : [ "hidden", "readonly" ]
    },
    "id" : {
      "type" : "string",
      "title" : "Datasource ID",
      "description" : "Unique name for this datasource.",
      "minLength" : 1,
      "pattern" : "^[a-zA-Z0-9_-]+$"
    },
    "connector" : {
      "type" : "string",
      "title" : "Connector Type",
      "description" : "Connector Type.",
      "hints" : [ "hidden" ],
      "minLength" : 1
    },
    "type" : {
      "type" : "string",
      "title" : "Datasource Type",
      "description" : "Datasource type supported by the selected connector type.",
      "hints" : [ "hidden" ],
      "minLength" : 1
    },
    "pipeline" : {
      "type" : "string",
      "title" : "Pipeline ID",
      "description" : "Name of an existing index pipeline for processing documents.",
      "minLength" : 1
    },
    "description" : {
      "type" : "string",
      "title" : "Description",
      "description" : "Optional description for this datasource."
    },
    "type_description" : {
      "type" : "string",
      "title" : "Type Description",
      "default" : "Crawl a MongoDB database. For recrawls, the crawler can use the oplog in MongoDB to discover new content and updates to existing content (updated or removed documents). If a full re-synchronization is required, it can be done by de-selecting the oplog option and starting the crawl again.",
      "hints" : [ "hidden", "readonly" ]
    },
    "properties" : {
      "type" : "object",
      "title" : "Properties",
      "description" : "Datasource configuration properties",
      "required" : [ "list_hosts", "process_oplog" ],
      "properties" : {
        "collection" : {
          "type" : "string",
          "title" : "Collection",
          "description" : "Collection documents will be indexed to.",
          "hints" : [ "hidden" ],
          "pattern" : "^[a-zA-Z0-9_-]+$"
        },
        "db" : {
          "type" : "object",
          "title" : "Connector DB",
          "description" : "Type and properties for a ConnectorDB implementation to use with this datasource.",
          "required" : [ "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "title" : "Implementation Class Name",
              "description" : "Fully qualified class name of ConnectorDb implementation.",
              "default" : "com.lucidworks.connectors.db.impl.MapDbConnectorDb",
              "minLength" : 1
            },
            "inlinks" : {
              "type" : "boolean",
              "title" : "Process Inlinks?",
              "description" : "Keep track of incoming links. This negatively impacts performance and size of DB.",
              "default" : false
            },
            "aliases" : {
              "type" : "boolean",
              "title" : "Process Aliases?",
              "description" : "Keep track of original URI-s that resolved to the current URI. This negatively impacts performance and size of DB.",
              "default" : false
            },
            "inv_aliases" : {
              "type" : "boolean",
              "title" : "Process Inverted Aliases?",
              "description" : "Keep track of target URI-s that the current URI resolves to. This negatively impacts performance and size of DB.",
              "default" : false
            }
          },
          "hints" : [ "hidden" ]
        },
        "list_hosts" : {
          "type" : "array",
          "title" : "Hosts",
          "description" : "Host and ports of Mongo nodes",
          "default" : [ {
            "host" : "localhost",
            "port" : 27017
          } ],
          "items" : {
            "type" : "object",
            "title" : "Hosts",
            "properties" : {
              "host" : {
                "type" : "string",
                "title" : "Host",
                "description" : "The hostname of the MongoDB instance. The default is 'localhost'."
              },
              "port" : {
                "type" : "integer",
                "title" : "Port",
                "description" : "The port of the MongoDB instance. The default '27017'."
              }
            },
            "category" : "Other",
            "categoryPriority" : 1,
            "unsafe" : false
          }
        },
        "list_credentials" : {
          "type" : "array",
          "title" : "Credentials",
          "description" : "Credentials for Mongo databases",
          "items" : {
            "type" : "object",
            "title" : "Credentials",
            "properties" : {
              "database" : {
                "type" : "string",
                "title" : "Database",
                "description" : "The MongoDB \"Authentication Database\" where the user is defined"
              },
              "username" : {
                "type" : "string",
                "title" : "Username",
                "description" : "The username to use if the MongoDB instance requires a username and password."
              },
              "password" : {
                "type" : "string",
                "title" : "Password",
                "description" : "The password to use if the MongoDB instance requires a username and password.",
                "hints" : [ "secret" ]
              },
              "LDAP" : {
                "type" : "boolean",
                "title" : "LDAP?",
                "description" : "When enabled, LDAP will be used to authenticate credentials. More Info: https://www.mongodb.com/docs/v6.0/core/security-ldap/",
                "default" : false
              },
              "id" : {
                "type" : "string",
                "title" : "Auth Config id",
                "description" : "Auth Config id ",
                "hints" : [ "hidden" ]
              }
            },
            "category" : "Other",
            "categoryPriority" : 1,
            "unsafe" : false
          }
        },
        "collections" : {
          "type" : "string",
          "title" : "MongoDB Collections to index",
          "description" : "The MongoDB collections to index, in the format 'databaseName.collection'. Multiple collections can be separated by commas. The default '*.*' option crawls all databases (limited by user access) and their related collections.",
          "default" : "*.*",
          "minLength" : 1
        },
        "process_oplog" : {
          "type" : "boolean",
          "title" : "Process OPLog",
          "description" : "Process updates from the oplog. Disable this option to perform a full synchronization of content in MongoDB collections with the index.",
          "default" : true
        },
        "diagnosticMode" : {
          "type" : "boolean",
          "title" : "Diagnostic Mode",
          "description" : "Diagnostic mode enables more logging, including logging the ID of every document inserted, updated or deleted in the oplog.",
          "default" : false
        },
        "batch_size_solr_commit" : {
          "type" : "integer",
          "title" : "Batch size Solr commit",
          "description" : "The number of documents every time solr_commit will be made.",
          "default" : 1000
        },
        "enable_ssl" : {
          "type" : "boolean",
          "title" : "Enable SSL",
          "description" : "When enabled, SSL connections will be used to communicate with the MongoDB server",
          "default" : false
        },
        "customized_timestamp" : {
          "type" : "integer",
          "title" : "Customized Timestamp",
          "description" : "Customized timestamp in epoch format (e.g. 1557881001), it is used to overwrite the existing checkpoint in zookeeper, use it carefully. The checkpoint is overwritten as long as the oplog is enabled. This property is transient, it means: if you set a value and add/update the datasoure, after the checkpoint is replaced, this property will be removed; you must refresh the UI manually",
          "hints" : [ "advanced" ],
          "minimum" : 0,
          "exclusiveMinimum" : false
        },
        "oplog_listener_period_time" : {
          "type" : "integer",
          "title" : "Checkpoint Update Period Time",
          "description" : "Period time in seconds when the checkpoint is updated in zookeeper. This option will work if oplog is enabled",
          "default" : 60,
          "hints" : [ "advanced" ]
        },
        "read_preferences" : {
          "type" : "string",
          "title" : "Read Preference Modes",
          "description" : "Read preference describes how MongoDB clients route read operations to the members of a replica set.",
          "enum" : [ "primary", "primary preferred", "secondary", "secondary preferred", "nearest" ],
          "default" : "primary"
        },
        "tag_set_list" : {
          "type" : "array",
          "title" : "Read Preference Tag Sets",
          "description" : "A list of Tag Sets used for non-primary read modes",
          "default" : [ ],
          "items" : {
            "type" : "object",
            "title" : "Tag Sets Item",
            "description" : "Tag Set Item",
            "properties" : {
              "tag_set" : {
                "type" : "array",
                "title" : "Tag Set",
                "description" : "Set of Tags",
                "default" : [ ],
                "items" : {
                  "type" : "object",
                  "title" : "Tags",
                  "properties" : {
                    "tag_name" : {
                      "type" : "string",
                      "title" : "Tag Name",
                      "description" : "Name of the tag"
                    },
                    "tag_value" : {
                      "type" : "string",
                      "title" : "Tag Value",
                      "description" : "Value of the tag"
                    }
                  },
                  "category" : "Other",
                  "categoryPriority" : 1,
                  "unsafe" : false
                }
              }
            },
            "category" : "Other",
            "categoryPriority" : 1,
            "unsafe" : false
          }
        },
        "commit_on_finish" : {
          "type" : "boolean",
          "title" : "Solr commit on finish",
          "description" : "Set to true for a request to be sent to Solr after the last batch has been fetched to commit the documents to the index.",
          "default" : true,
          "hints" : [ "advanced" ]
        },
        "verify_access" : {
          "type" : "boolean",
          "title" : "Validate access",
          "description" : "Set to true to require successful connection to the filesystem before saving this datasource.",
          "default" : true,
          "hints" : [ "advanced" ]
        },
        "initial_mapping" : {
          "type" : "object",
          "title" : "Initial field mapping",
          "description" : "Provides mapping of fields before documents are sent to an index pipeline.",
          "properties" : {
            "skip" : {
              "type" : "boolean",
              "title" : "Skip This Stage",
              "description" : "Set to true to skip this stage.",
              "default" : false,
              "hints" : [ "advanced" ]
            },
            "label" : {
              "type" : "string",
              "title" : "Label",
              "description" : "A unique label for this stage.",
              "hints" : [ "advanced" ],
              "maxLength" : 255
            },
            "condition" : {
              "type" : "string",
              "title" : "Condition",
              "description" : "Define a conditional script that must result in true or false. This can be used to determine if the stage should process or not.",
              "hints" : [ "code", "code/javascript", "advanced" ]
            },
            "reservedFieldsMappingAllowed" : {
              "type" : "boolean",
              "title" : "Allow System Fields Mapping?",
              "default" : false,
              "hints" : [ "advanced" ]
            },
            "retentionMappings" : {
              "type" : "array",
              "title" : "Field Retention",
              "description" : "Fields that should be kept or deleted",
              "hints" : [ "advanced" ],
              "items" : {
                "type" : "object",
                "required" : [ "field" ],
                "properties" : {
                  "field" : {
                    "type" : "string",
                    "title" : "Field",
                    "description" : "The name of the field to operate on.",
                    "hints" : [ "advanced" ]
                  },
                  "operation" : {
                    "type" : "string",
                    "title" : "Operation",
                    "description" : "The type of operation to perform: keep (default) or delete",
                    "enum" : [ "keep", "delete" ],
                    "default" : "keep",
                    "hints" : [ "advanced" ]
                  }
                }
              }
            },
            "updateMappings" : {
              "type" : "array",
              "title" : "Field Value Updates",
              "description" : "Values that should be added to or set on a field. When a value is added, any values previously on the field will be retained. When a value is set, any values previously on the field will be overwritten.",
              "hints" : [ "advanced" ],
              "items" : {
                "type" : "object",
                "required" : [ "field", "value" ],
                "properties" : {
                  "field" : {
                    "type" : "string",
                    "title" : "Field",
                    "description" : "The name of the field to operate on.",
                    "hints" : [ "advanced" ]
                  },
                  "value" : {
                    "type" : "string",
                    "title" : "Value",
                    "description" : "The value to add to or set on the field.",
                    "hints" : [ "advanced" ]
                  },
                  "operation" : {
                    "type" : "string",
                    "title" : "Operation",
                    "description" : "The type of operation to perform: add (default) or set.",
                    "enum" : [ "add", "set" ],
                    "default" : "add",
                    "hints" : [ "advanced" ]
                  }
                }
              }
            },
            "translationMappings" : {
              "type" : "array",
              "title" : "Field Translations",
              "description" : "Fields that should be moved or copied to another field. When a field is moved, the values from the source field are moved over to the target field and the source field is removed. When a field is copied, the values from the source field are copied over to the target field and the source field is retained.",
              "hints" : [ "advanced" ],
              "items" : {
                "type" : "object",
                "required" : [ "source", "target" ],
                "properties" : {
                  "source" : {
                    "type" : "string",
                    "title" : "Source Field",
                    "description" : "The name of the field to operate on.",
                    "hints" : [ "advanced" ]
                  },
                  "target" : {
                    "type" : "string",
                    "title" : "Target Field",
                    "description" : "The name of the target field.",
                    "hints" : [ "advanced" ]
                  },
                  "operation" : {
                    "type" : "string",
                    "title" : "Operation",
                    "description" : "The type of operation to perform: copy (default) or move.",
                    "enum" : [ "copy", "move" ],
                    "default" : "copy",
                    "hints" : [ "advanced" ]
                  }
                }
              }
            },
            "unmappedRule" : {
              "type" : "object",
              "title" : "Unmapped Fields",
              "description" : "Fields not mapped by the above rules. By default, any remaining fields will be kept on the document.",
              "properties" : {
                "keep" : {
                  "type" : "boolean",
                  "title" : "Keep",
                  "description" : "Keep all unmapped fields",
                  "default" : true,
                  "hints" : [ "advanced" ]
                },
                "delete" : {
                  "type" : "boolean",
                  "title" : "Delete",
                  "description" : "Delete all unmapped fields",
                  "default" : false,
                  "hints" : [ "advanced" ]
                },
                "fieldToMoveValuesTo" : {
                  "type" : "string",
                  "title" : "Move",
                  "description" : "Move all unmapped field values to this field",
                  "hints" : [ "advanced" ]
                },
                "fieldToCopyValuesTo" : {
                  "type" : "string",
                  "title" : "Copy",
                  "description" : "Copy all unmapped field values to this field",
                  "hints" : [ "advanced" ]
                },
                "valueToAddToUnmappedFields" : {
                  "type" : "string",
                  "title" : "Add",
                  "description" : "Add this value to all unmapped fields",
                  "hints" : [ "advanced" ]
                },
                "valueToSetOnUnmappedFields" : {
                  "type" : "string",
                  "title" : "Set",
                  "description" : "Set this value on all unmapped fields",
                  "hints" : [ "advanced" ]
                }
              }
            }
          },
          "category" : "Field Transformation",
          "categoryPriority" : 7,
          "hints" : [ "advanced" ],
          "unsafe" : false
        }
      },
      "propertyGroups" : [ {
        "label" : "Read Preferences Selection",
        "properties" : [ "read_preferences", "tag_set_list" ]
      }, {
        "label" : "Field Mapping",
        "properties" : [ "initial_mapping" ]
      } ]
    }
  },
  "category" : "Other",
  "categoryPriority" : 1,
  "unsafe" : false
}