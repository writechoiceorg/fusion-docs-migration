{
  "type" : "object",
  "title" : "JDBC (v2)",
  "description" : "Connector to index content in a database.",
  "required" : [ "parserId", "id", "properties", "pipeline" ],
  "properties" : {
    "created" : {
      "type" : "string",
      "title" : "Date Created",
      "description" : "The date at which this Configuration was created.",
      "hints" : [ "readonly", "hidden" ]
    },
    "description" : {
      "type" : "string",
      "title" : "Description",
      "description" : "Optional description",
      "hints" : [ "lengthy" ],
      "maxLength" : 125
    },
    "collection" : {
      "type" : "string",
      "title" : "Collection ID",
      "description" : "The associated content Collection.",
      "hints" : [ "readonly", "hidden" ],
      "minLength" : 1,
      "pattern" : "^[a-zA-Z0-9_-]+$"
    },
    "type" : {
      "type" : "string",
      "title" : "Type",
      "description" : "A type ID for this connector.",
      "hints" : [ "readonly", "hidden" ]
    },
    "pipeline" : {
      "type" : "string",
      "title" : "Pipeline ID",
      "description" : "Name of the IndexPipeline used for processing output.",
      "minLength" : 1,
      "pattern" : "^[a-zA-Z0-9_-]+$"
    },
    "diagnosticLogging" : {
      "type" : "boolean",
      "title" : "Diagnostic Logging",
      "description" : "Enable diagnostic logging; disabled by default",
      "default" : false
    },
    "connector" : {
      "title" : "Connector Type",
      "description" : "Connector type.",
      "minLength" : 1,
      "type" : "string",
      "hints" : [ "hidden" ]
    },
    "parserId" : {
      "type" : "string",
      "title" : "Parser ID",
      "description" : "The Parser to use in the associated IndexPipeline."
    },
    "coreProperties" : {
      "type" : "object",
      "title" : "Core Properties",
      "description" : "Common behavior and performance settings.",
      "required" : [ ],
      "properties" : {
        "fetchSettings" : {
          "type" : "object",
          "title" : "Fetch Settings",
          "description" : "System level settings for controlling fetch behavior and performance.",
          "required" : [ ],
          "properties" : {
            "pluginInstances" : {
              "type" : "number",
              "title" : "Number of plugin instances for distributed fetching",
              "description" : "Maximum number of plugin instances for distributed fetching. Only specified number of plugin instanceswill do fetching. This is useful for distributing load between different instances.",
              "default" : 0,
              "maximum" : 500,
              "exclusiveMaximum" : false,
              "minimum" : 0,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            },
            "fetchItemQueueSize" : {
              "type" : "number",
              "title" : "Fetch Item Queue Size",
              "description" : "Size of the fetch item queue.Larger values result in increased memory usage, but potentially higher performance.Default is 10k.",
              "default" : 10000,
              "hints" : [ "hidden" ],
              "maximum" : 500000,
              "exclusiveMaximum" : false,
              "minimum" : 1,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            },
            "fetchRequestCheckInterval" : {
              "type" : "number",
              "title" : "Fetch request check interval(ms)",
              "description" : "The amount of time to wait before check if a request is done",
              "default" : 15000,
              "hints" : [ "hidden" ],
              "maximum" : 500000,
              "exclusiveMaximum" : false,
              "minimum" : 1000,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            },
            "fetchResponseScheduledTimeout" : {
              "type" : "number",
              "title" : "Fetch response scheduled timeout(ms)",
              "description" : "The maximum amount of time for a response to be scheduled. The task will be canceled if this setting is exceeded.",
              "default" : 300000,
              "maximum" : 500000,
              "exclusiveMaximum" : false,
              "minimum" : 1000,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            },
            "fetchResponseCompletedTimeout" : {
              "type" : "number",
              "title" : "Fetch response completion timeout(ms)",
              "description" : "The maximum amount of time for a response to be completed. If exceeded, the task will be retried if the job is still running",
              "default" : 300000,
              "hints" : [ "hidden" ],
              "maximum" : 600000,
              "exclusiveMaximum" : false,
              "minimum" : 1,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            },
            "indexingInactivityTimeout" : {
              "type" : "number",
              "title" : "Indexing inactivity timeout(seconds)",
              "description" : "The maximum amount of time to wait for indexing results (in seconds). If exceeded, the job will fail with an indexing inactivity timeout.",
              "default" : 86400,
              "maximum" : 691200,
              "exclusiveMaximum" : false,
              "minimum" : 60,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            },
            "numFetchThreads" : {
              "type" : "number",
              "title" : "Fetch Threads",
              "description" : "Maximum number of fetch threads; defaults to 20.This setting controls the number of threads that call the Connectors fetch method.Higher values can, but not always, help with overall fetch performance.",
              "default" : 20,
              "maximum" : 500,
              "exclusiveMaximum" : false,
              "minimum" : 1,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            },
            "indexingThreads" : {
              "type" : "number",
              "title" : "Index Subscription Threads",
              "description" : "Maximum number of indexing threads; defaults to 4.This setting controls the number of threads in the indexing service used for processing content documents emitted by this datasource.Higher values can sometimes help with overall fetch performance.",
              "default" : 4,
              "maximum" : 10,
              "exclusiveMaximum" : false,
              "minimum" : 1,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            },
            "pluginInactivityTimeout" : {
              "type" : "number",
              "title" : "Plugin inactivity timeout(seconds)",
              "description" : "The maximum amount of time to wait for plugin activity (in seconds). If exceeded, the job will fail with a plugin inactivity timeout.",
              "default" : 600,
              "maximum" : 691200,
              "exclusiveMaximum" : false,
              "minimum" : 60,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            },
            "indexMetadata" : {
              "type" : "boolean",
              "title" : "Index metadata",
              "description" : "When enabled the metadata of skipped items will be indexed to the content collection.",
              "default" : false
            },
            "indexContentFields" : {
              "type" : "boolean",
              "title" : "Index content fields",
              "description" : "When enabled, content fields will be indexed to the crawl-db collection.",
              "default" : false
            },
            "asyncParsing" : {
              "type" : "boolean",
              "title" : "Async Parsing",
              "description" : "When enabled, content will be indexed asynchronously.",
              "default" : false
            }
          },
          "interfaces" : [ "com.lucidworks.fusion.connector.plugin.api.config.CoreConfig$FetchSystemSettings" ]
        }
      },
      "interfaces" : [ "com.lucidworks.fusion.connector.plugin.api.config.CoreConfig" ],
      "hints" : [ "advanced" ]
    },
    "modified" : {
      "type" : "string",
      "title" : "Date Modified",
      "description" : "The date at which this Configuration was last modified.",
      "hints" : [ "readonly", "hidden" ]
    },
    "id" : {
      "type" : "string",
      "title" : "Configuration ID",
      "description" : "A unique identifier for this Configuration.",
      "minLength" : 1,
      "pattern" : "^[a-zA-Z0-9_-]+$"
    },
    "category" : {
      "type" : "string",
      "title" : "Category",
      "default" : "Connector to index content in a database.",
      "hints" : [ "hidden", "readonly" ]
    },
    "properties" : {
      "type" : "object",
      "title" : "JDBC properties",
      "description" : "Plugin specific properties.",
      "required" : [ "driver", "query", "url", "primaryKey" ],
      "properties" : {
        "url" : {
          "type" : "string",
          "title" : "JDBC URL",
          "description" : "A URL to the database, e.g., 'jdbc:mysql://localhost/test'"
        },
        "driver" : {
          "type" : "string",
          "title" : "JDBC driver",
          "description" : "The class name of the JDBC driver to use to connect to the database."
        },
        "query" : {
          "type" : "string",
          "title" : "SQL statement",
          "description" : "A SQL SELECT statement to choose the records to be retrieved. For paginated queries, use the special variables ${limit} and ${offset}. The specific syntax will be driver dependent. Examples: Mysql - SELECT * FROM test_table LIMIT ${limit} OFFSET ${offset}, Microsoft SQLServer - SELECT * FROM test_table ORDER BY primary_key OFFSET ${offset} FETCH NEXT ${limit} ROWS ONLY"
        },
        "enableAutomaticPagination" : {
          "type" : "boolean",
          "title" : "Enable Automatic Pagination",
          "description" : "Enabled automatic pagination such that pagination will be done as long as criteria is met",
          "default" : true
        },
        "deltaQuery" : {
          "type" : "string",
          "title" : "Delta SQL Query",
          "description" : "An optional second query that will be used on re-crawls. It is intended to be used to save performance by returning only new/modified items. When used with Stray Content Deletion, any item not returned by this query will be deleted from the content collection after each re-crawl."
        },
        "nestedQueries" : {
          "type" : "array",
          "title" : "Nested SQL Queries",
          "description" : "A nested query to join data from multiple tables. The nested query will be used with the SQL Statement and must include the primary key with the ${id} template. For example, 'SELECT column FROM table_fk WHERE pk_id=${id}'.",
          "items" : {
            "type" : "string"
          }
        },
        "strayContentDeletionEnabled" : {
          "type" : "boolean",
          "title" : "Enable Stray Content Deletion",
          "description" : "When this feature is enabled, items not returned by the SQL query used for the crawl will be deleted from the content collection after each crawl. If it is disabled, no checks are performed for data freshness.",
          "default" : true
        },
        "primaryKey" : {
          "type" : "string",
          "title" : "Primary key",
          "description" : "The column name of the primary key for the table.",
          "default" : "id"
        },
        "username" : {
          "type" : "string",
          "title" : "username",
          "description" : "The username of a database account used for authentication and data access."
        },
        "password" : {
          "type" : "string",
          "title" : "password",
          "description" : "The password of the account used for authentication and data access.",
          "hints" : [ "secret" ]
        },
        "batchSize" : {
          "type" : "number",
          "title" : "Batch size",
          "description" : "Size of the batch during the statement execution",
          "default" : 5000,
          "maximum" : 2147483647,
          "exclusiveMaximum" : false,
          "minimum" : -2147483648,
          "exclusiveMinimum" : false,
          "multipleOf" : 1.0
        },
        "maxConnections" : {
          "type" : "number",
          "title" : "Maximum of open connections",
          "description" : "Maximum of connections in parallel to be used during statements execution",
          "default" : 20,
          "maximum" : 2147483647,
          "exclusiveMaximum" : false,
          "minimum" : -2147483648,
          "exclusiveMinimum" : false,
          "multipleOf" : 1.0
        },
        "nestedQueryTimeOut" : {
          "type" : "number",
          "title" : "Nested query timeout",
          "description" : "Timeout in minutes while executing a nested query statement",
          "default" : 1,
          "maximum" : 2147483647,
          "exclusiveMaximum" : false,
          "minimum" : -2147483648,
          "exclusiveMinimum" : false,
          "multipleOf" : 1.0
        },
        "skipValidation" : {
          "type" : "boolean",
          "title" : "Skip Connection Validation",
          "description" : "Sometimes the validation can take long time, it is better to skip it.",
          "default" : false
        },
        "offset" : {
          "type" : "number",
          "title" : "Fetch starting offset",
          "description" : "Starting number for records fetch. Such as starting from the 10th record",
          "default" : 0,
          "hints" : [ "hidden" ],
          "maximum" : 2147483647,
          "exclusiveMaximum" : false,
          "minimum" : -2147483648,
          "exclusiveMinimum" : false,
          "multipleOf" : 1.0
        },
        "limit" : {
          "type" : "number",
          "title" : "Limit",
          "description" : "Limiter to paginate the results returned. Max amount of records to return at a time",
          "default" : 10000,
          "hints" : [ "hidden" ],
          "maximum" : 2147483647,
          "exclusiveMaximum" : false,
          "minimum" : -2147483648,
          "exclusiveMinimum" : false,
          "multipleOf" : 1.0
        },
        "disableAutomaticPagination" : {
          "type" : "boolean",
          "title" : "Disable Automatic Pagination",
          "description" : "Disable automatic pagination such that limit and offset fields will be ignored",
          "default" : false,
          "hints" : [ "hidden" ]
        },
        "maximumItemLimitConfig" : {
          "type" : "object",
          "title" : "Item Count Limits",
          "required" : [ ],
          "properties" : {
            "maxItems" : {
              "type" : "number",
              "title" : "Maximum Output Limit",
              "description" : "Limits the number of items emitted to the configured IndexPipeline. The default is no limit (-1).",
              "default" : -1,
              "maximum" : 2147483647,
              "exclusiveMaximum" : false,
              "minimum" : -2147483648,
              "exclusiveMinimum" : false,
              "multipleOf" : 1.0
            }
          },
          "interfaces" : [ "com.lucidworks.fusion.connector.plugin.api.config.MaximumItemLimitConfig$Properties" ]
        }
      },
      "interfaces" : [ "com.lucidworks.connector.plugins.jdbc.config.JdbcConfig$Properties", "com.lucidworks.fusion.connector.plugin.api.config.MaximumItemLimitConfig", "com.lucidworks.fusion.connector.plugin.api.config.ConnectorPluginProperties" ]
    },
    "type_description" : {
      "type" : "string",
      "title" : "Type Description",
      "default" : "Connector to index content in a database.",
      "hints" : [ "hidden", "readonly" ]
    }
  },
  "category" : "Database",
  "categoryPriority" : 1
}