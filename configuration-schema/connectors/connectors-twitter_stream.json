{
  "category": "Other",
  "categoryPriority": 1,
  "description": "Twitter Stream uses Twitter's stream API to continually index tweets. It includes the ability to set some properties for limiting the tweets, and it never ends unless Twitter stops your access or you stop the datasource.",
  "properties": {
    "category": {
      "default": "Social",
      "hints": [
        "hidden",
        "readonly"
      ],
      "title": "Category",
      "type": "string"
    },
    "connector": {
      "description": "Connector Type.",
      "hints": [
        "hidden"
      ],
      "minLength": 1,
      "title": "Connector Type",
      "type": "string"
    },
    "description": {
      "description": "Optional description for this datasource.",
      "title": "Description",
      "type": "string"
    },
    "id": {
      "description": "Unique name for this datasource.",
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9_-]+$",
      "title": "Datasource ID",
      "type": "string"
    },
    "parserId": {
      "description": "Parser used when parsing raw content. Retry parsing setting is available under crawl performance (advance setting)",
      "title": "Parser",
      "type": "string"
    },
    "pipeline": {
      "description": "Name of an existing index pipeline for processing documents.",
      "minLength": 1,
      "title": "Pipeline ID",
      "type": "string"
    },
    "properties": {
      "description": "Datasource configuration properties",
      "properties": {
        "access_token": {
          "description": "The OAuth Access Token is provided by Twitter when registering the application.",
          "minLength": 1,
          "title": "Access Token",
          "type": "string"
        },
        "collection": {
          "description": "Collection documents will be indexed to.",
          "hints": [
            "hidden"
          ],
          "pattern": "^[a-zA-Z0-9_-]+$",
          "title": "Collection",
          "type": "string"
        },
        "commit_on_finish": {
          "default": true,
          "description": "Set to true for a request to be sent to Solr after the last batch has been fetched to commit the documents to the index.",
          "hints": [
            "advanced"
          ],
          "title": "Solr commit on finish",
          "type": "boolean"
        },
        "consumer_key": {
          "description": "The OAuth Consumer Key is provided by Twitter when registering the application.",
          "minLength": 1,
          "title": "Consumer Key",
          "type": "string"
        },
        "consumer_secret": {
          "description": "The OAuth Consumer Secret is provided by Twitter when registering the application.",
          "hints": [
            "secret"
          ],
          "minLength": 1,
          "title": "Consumer Secret",
          "type": "string"
        },
        "db": {
          "description": "Type and properties for a ConnectorDB implementation to use with this datasource.",
          "hints": [
            "hidden"
          ],
          "properties": {
            "aliases": {
              "default": false,
              "description": "Keep track of original URI-s that resolved to the current URI. This negatively impacts performance and size of DB.",
              "title": "Process Aliases?",
              "type": "boolean"
            },
            "inlinks": {
              "default": false,
              "description": "Keep track of incoming links. This negatively impacts performance and size of DB.",
              "title": "Process Inlinks?",
              "type": "boolean"
            },
            "inv_aliases": {
              "default": false,
              "description": "Keep track of target URI-s that the current URI resolves to. This negatively impacts performance and size of DB.",
              "title": "Process Inverted Aliases?",
              "type": "boolean"
            },
            "type": {
              "default": "com.lucidworks.connectors.db.impl.MapDbConnectorDb",
              "description": "Fully qualified class name of ConnectorDb implementation.",
              "minLength": 1,
              "title": "Implementation Class Name",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "Connector DB",
          "type": "object"
        },
        "filter_follow": {
          "description": "Set of users (user ids) to track",
          "items": {
            "type": "string"
          },
          "title": "Filter Follow",
          "type": "array"
        },
        "filter_locations": {
          "description": "Set of bounding boxes (e.g. 'left,bottom,right,top' lat/long coordinates)",
          "items": {
            "type": "string"
          },
          "title": "Filter Locations",
          "type": "array"
        },
        "filter_track": {
          "description": "Keywords or phrases to track",
          "items": {
            "type": "string"
          },
          "title": "Filter Track",
          "type": "array"
        },
        "initial_mapping": {
          "category": "Field Transformation",
          "categoryPriority": 6,
          "description": "Provides mapping of fields before documents are sent to an index pipeline.",
          "hints": [
            "advanced"
          ],
          "properties": {
            "condition": {
              "description": "Define a conditional script that must result in true or false. This can be used to determine if the stage should process or not.",
              "hints": [
                "code",
                "javascript",
                "advanced"
              ],
              "title": "Condition",
              "type": "string"
            },
            "label": {
              "description": "A unique label for this stage.",
              "hints": [
                "advanced"
              ],
              "maxLength": 255,
              "title": "Label",
              "type": "string"
            },
            "mappings": {
              "description": "List of mapping rules",
              "hints": [
                "advanced"
              ],
              "items": {
                "properties": {
                  "operation": {
                    "default": "copy",
                    "description": "The type of mapping to perform: move, copy, delete, add, set, or keep.",
                    "enum": [
                      "copy",
                      "move",
                      "delete",
                      "set",
                      "add",
                      "keep"
                    ],
                    "hints": [
                      "advanced"
                    ],
                    "title": "Operation",
                    "type": "string"
                  },
                  "source": {
                    "description": "The name of the field to be mapped.",
                    "hints": [
                      "advanced"
                    ],
                    "title": "Source Field",
                    "type": "string"
                  },
                  "target": {
                    "description": "The name of the field to be mapped to.",
                    "hints": [
                      "advanced"
                    ],
                    "title": "Target Field",
                    "type": "string"
                  }
                },
                "required": [
                  "source"
                ],
                "type": "object"
              },
              "title": "Field Mappings",
              "type": "array"
            },
            "reservedFieldsMappingAllowed": {
              "default": false,
              "hints": [
                "advanced"
              ],
              "title": "Allow System Fields Mapping?",
              "type": "boolean"
            },
            "skip": {
              "default": false,
              "description": "Set to true to skip this stage.",
              "hints": [
                "advanced"
              ],
              "title": "Skip This Stage",
              "type": "boolean"
            },
            "unmapped": {
              "description": "If fields do not match any of the field mapping rules, these rules will apply.",
              "hints": [
                "advanced"
              ],
              "properties": {
                "operation": {
                  "default": "copy",
                  "description": "The type of mapping to perform: move, copy, delete, add, set, or keep.",
                  "enum": [
                    "copy",
                    "move",
                    "delete",
                    "set",
                    "add",
                    "keep"
                  ],
                  "hints": [
                    "advanced"
                  ],
                  "title": "Operation",
                  "type": "string"
                },
                "source": {
                  "description": "The name of the field to be mapped.",
                  "hints": [
                    "advanced"
                  ],
                  "title": "Source Field",
                  "type": "string"
                },
                "target": {
                  "description": "The name of the field to be mapped to.",
                  "hints": [
                    "advanced"
                  ],
                  "title": "Target Field",
                  "type": "string"
                }
              },
              "required": [
                "source"
              ],
              "title": "Unmapped Fields",
              "type": "object"
            }
          },
          "title": "Initial field mapping",
          "type": "object"
        },
        "max_docs": {
          "default": -1,
          "description": "The maximum number of documents to pull down, as a long. -1 for no limit",
          "title": "Max Documents",
          "type": "integer"
        },
        "sleep": {
          "default": 10000,
          "description": "The amount of time, in milliseconds, to sleep when listening so as to not get throttled",
          "title": "Sleep",
          "type": "integer"
        },
        "token_secret": {
          "description": "The OAuth Token Secret is provided by Twitter when registering the application.",
          "hints": [
            "secret"
          ],
          "minLength": 1,
          "title": "Token Secret",
          "type": "string"
        },
        "url": {
          "default": "https://stream.twitter.com",
          "description": "The URL used by the Twitter Stream",
          "hints": [
            "readonly",
            "hidden"
          ],
          "title": "URL",
          "type": "string"
        }
      },
      "propertyGroups": [
        {
          "label": "Limit Documents",
          "properties": [
            "filter_follow",
            "filter_track",
            "filter_locations",
            "max_docs"
          ]
        },
        {
          "label": "Crawl Performance",
          "properties": [
            "sleep"
          ]
        },
        {
          "label": "Field Mapping",
          "properties": [
            "initial_mapping"
          ]
        }
      ],
      "required": [
        "consumer_key",
        "consumer_secret",
        "access_token",
        "token_secret"
      ],
      "title": "Properties",
      "type": "object"
    },
    "type": {
      "description": "Datasource type supported by the selected connector type.",
      "hints": [
        "hidden"
      ],
      "minLength": 1,
      "title": "Datasource Type",
      "type": "string"
    },
    "type_description": {
      "default": "Twitter Stream uses Twitter's stream API to continually index tweets. It includes the ability to set some properties for limiting the tweets, and it never ends unless Twitter stops your access or you stop the datasource.",
      "hints": [
        "hidden",
        "readonly"
      ],
      "title": "Type Description",
      "type": "string"
    }
  },
  "required": [
    "id",
    "connector",
    "type",
    "pipeline",
    "properties"
  ],
  "title": "Twitter Stream",
  "type": "object"
}