{
  "type": "object",
  "title": "[BETA] Vectorize Query via Lucidworks AI",
  "description": "Generate a vector based on the current query string (q parameter). Uses a Lucidworks AI learning model to encode the raw query string (q parameter) to a vector representation. Will be skipped if query string is blank or wildcard (* or *:*). Note this will not work well if the incoming q parameter is a Solr query parser string (e.g. field_t:foo) rather than a raw user query string.",
  "required": [
    "accountName",
    "modelType",
    "queryInput",
    "outputContextVariable"
  ],
  "properties": {
    "skip": {
      "type": "boolean",
      "title": "Skip This Stage",
      "description": "Set to true to skip this stage.",
      "default": false,
      "hints": [
        "advanced"
      ]
    },
    "label": {
      "type": "string",
      "title": "Label",
      "description": "A unique label for this stage.",
      "hints": [
        "advanced"
      ],
      "maxLength": 255
    },
    "condition": {
      "type": "string",
      "title": "Condition",
      "description": "Define a conditional script that must result in true or false. This can be used to determine if the stage should process or not.",
      "hints": [
        "code",
        "code/javascript",
        "advanced"
      ]
    },
    "legacy": {
      "type": "boolean",
      "title": "Legacy",
      "description": "True if this stage only supports legacy mode",
      "hints": [
        "readonly",
        "hidden"
      ]
    },
    "accountName": {
      "type": "string",
      "title": "Account Name",
      "description": "Lucidworks AI account name."
    },
    "modelType": {
      "type": "string",
      "title": "Model Type",
      "description": "Lucidworks AI model to use for encoding, for example 'multilinguallm'. Only models which accept a single string parameter and return a single dense vector value per input are supported."
    },
    "queryInput": {
      "type": "string",
      "title": "Query Input",
      "description": "The query itself is retrieved from here.",
      "default": "<request.params.q>",
      "hints": [
        "advanced"
      ]
    },
    "outputContextVariable": {
      "type": "string",
      "title": "Output Context Variable",
      "description": "The context variable into which the vector will be placed.",
      "default": "vector"
    },
    "failOnError": {
      "type": "boolean",
      "title": "Fail on Error",
      "description": "Flag to indicate if this stage should throw an exception if an error occurs while generating an encoding.",
      "default": false
    }
  },
  "category": "Advanced",
  "categoryPriority": 3,
  "unsafe": false
}
