{
  "type": "object",
  "title": "BPR Recommender",
  "description": "Use this job when you want to compute user recommendations or item similarities using a Bayesian Personalized Ranking recommender. You can also implement a user-to-item recommender in the advanced section of this jobâ€™s configuration UI.",
  "required": [
    "id",
    "trainingCollection",
    "trainingFormat",
    "outputFormat",
    "userIdField",
    "itemIdField",
    "type"
  ],
  "properties": {
    "id": {
      "type": "string",
      "title": "Job ID",
      "description": "The ID for this job. Used in the API to reference this job. Allowed characters: a-z, A-Z, dash (-) and underscore (_)",
      "maxLength": 63,
      "pattern": "[a-zA-Z][_\\-a-zA-Z0-9]*[a-zA-Z0-9]?"
    },
    "sparkConfig": {
      "type": "array",
      "title": "Additional parameters",
      "description": "Provide additional key/value pairs to be injected into the training JSON map at runtime. Values will be inserted as-is, so use \" to surround string values",
      "hints": [
        "advanced"
      ],
      "items": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "title": "Parameter Name"
          },
          "value": {
            "type": "string",
            "title": "Parameter Value"
          }
        }
      }
    },
    "writeOptions": {
      "type": "array",
      "title": "Write Options",
      "description": "Options used when writing output to Solr or other sources",
      "hints": [
        "advanced"
      ],
      "items": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "title": "Parameter Name"
          },
          "value": {
            "type": "string",
            "title": "Parameter Value"
          }
        }
      }
    },
    "readOptions": {
      "type": "array",
      "title": "Read Options",
      "description": "Options used when reading input from Solr or other sources.",
      "hints": [
        "advanced"
      ],
      "items": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "title": "Parameter Name"
          },
          "value": {
            "type": "string",
            "title": "Parameter Value"
          }
        }
      }
    },
    "outputBatchSize": {
      "type": "string",
      "title": "Output Batch Size",
      "description": "Batch size of documents when pushing results to solr",
      "default": "15000",
      "hints": [
        "advanced"
      ]
    },
    "jobRunName": {
      "type": "string",
      "title": "Job Run Name",
      "description": "Identifier for this job run. Use it to filter recommendations from particular runs.",
      "hints": [
        "advanced"
      ]
    },
    "trainingCollection": {
      "type": "string",
      "title": "Training data path",
      "description": "Solr collection or cloud storage path where training data is present.",
      "minLength": 1
    },
    "trainingFormat": {
      "type": "string",
      "title": "Training data format",
      "description": "The format of the training data - solr, parquet etc.",
      "default": "solr",
      "minLength": 1
    },
    "secretName": {
      "type": "string",
      "title": "Cloud storage secret name",
      "description": "Name of the secret used to access cloud storage as defined in the K8s namespace",
      "hints": [
        "advanced"
      ],
      "minLength": 1
    },
    "outputUserRecsCollection": {
      "type": "string",
      "title": "Items-Users Output Path",
      "description": "Solr collection or cloud storage path to store batch-predicted user/item recommendations (if absent, none computed). Specify at least one of Items-Users Output Collection or Items-Items Output Collection.",
      "minLength": 1
    },
    "outputItemSimCollection": {
      "type": "string",
      "title": "Item-Items Output Path",
      "description": "Solr collection or cloud storage path to store batch-computed item/item similarities (if absent, none computed). Specify at least one of Items-Users Output Collection or Items-Items Output Collection.",
      "minLength": 1
    },
    "outputFormat": {
      "type": "string",
      "title": "Output data format",
      "description": "The format of the output data - solr, parquet etc.",
      "default": "solr",
      "minLength": 1
    },
    "partitionFields": {
      "type": "string",
      "title": "Partition fields",
      "description": "If writing to non-Solr sources, this field will accept a comma-delimited list of column names for partitioning the dataframe before writing to the external output.",
      "hints": [
        "advanced"
      ]
    },
    "numRecsPerUser": {
      "type": "integer",
      "title": "No. of recs per user",
      "description": "Number of recommendations that will be saved per user.",
      "default": 10,
      "minimum": 0,
      "exclusiveMinimum": false
    },
    "userTopkAnn": {
      "type": "integer",
      "title": "No. of User Recs to Compute for Filtering",
      "description": "Applies only when Filter Already Clicked Items is enabled. This is used to fetch additional recommendations so that the value specified for the Number of Recommendations Per User is most likely satisfied with filtering turned on.",
      "hints": [
        "advanced"
      ],
      "minimum": 0,
      "exclusiveMinimum": false
    },
    "numSimsPerItem": {
      "type": "integer",
      "title": "No. of recs per item",
      "description": "Number of recommendations that will be saved per item.",
      "default": 10,
      "minimum": 0,
      "exclusiveMinimum": false
    },
    "deleteOldRecs": {
      "type": "boolean",
      "title": "Delete Old Recommendations",
      "description": "Should previous recommendations be deleted. If this box is unchecked, then old recommendations will not be deleted but new recommendations will be appended with a different Job ID. Both sets of recommendations will be contained within the same collection. Will only work when output path is solr.",
      "default": true
    },
    "excludeFromDeleteFilter": {
      "type": "string",
      "title": "Exclude from Delete Filter",
      "description": "If the 'Delete Old Recommendations' flag is enabled, then use this query filter to identify existing recommendation docs to exclude from delete. The filter should identify recommendation docs you want to keep.",
      "hints": [
        "advanced"
      ]
    },
    "filterClicked": {
      "type": "boolean",
      "title": "Filter already clicked items",
      "description": "Whether to filter out already clicked items in item recommendations for user. Takes more time but drastically improves quality.",
      "default": true,
      "hints": [
        "advanced"
      ]
    },
    "weightField": {
      "type": "string",
      "title": "Training Collection Counts/Weights Field",
      "description": "Solr field name containing stored counts/weights the user has for that item. This field is used as weight during training",
      "default": "aggr_count_i"
    },
    "trainingDataFilterQuery": {
      "type": "string",
      "title": "Training Data Filter Query",
      "description": "Solr or SQL query to filter training data. Use solr query when solr collection is specified in Training Path. Use SQL query when cloud storage location is specified. The table name for SQL is `spark_input`.",
      "hints": [
        "code/sql",
        "advanced"
      ]
    },
    "trainingSampleFraction": {
      "type": "number",
      "title": "Training Data Sampling Fraction",
      "description": "Choose a fraction of the data for training.",
      "default": 1.0,
      "hints": [
        "advanced"
      ],
      "maximum": 1.0,
      "exclusiveMaximum": false
    },
    "userIdField": {
      "type": "string",
      "title": "Training Collection User Id Field",
      "description": "Solr field name in the training collection that contains stored User ID.",
      "default": "user_id_s",
      "minLength": 1
    },
    "itemIdField": {
      "type": "string",
      "title": "Training Collection Item Id Field",
      "description": "Solr field name in the training collection that contains stored Item ID.",
      "default": "item_id_s",
      "minLength": 1
    },
    "randomSeed": {
      "type": "integer",
      "title": "Random Seed",
      "description": "Pseudorandom determinism fixed by keeping this seed constant",
      "default": 12345,
      "hints": [
        "advanced"
      ]
    },
    "itemMetadataFields": {
      "type": "array",
      "title": "Item Metadata Fields",
      "description": "List of item metadata fields to include in the recommendation output documents. WARNING: Adding many fields can lead to huge output sizes or OOM issues.",
      "hints": [
        "advanced"
      ],
      "items": {
        "type": "string"
      }
    },
    "itemMetadataCollection": {
      "type": "string",
      "title": "Item Metadata Path",
      "description": "Cloud storage path or Solr collection containing item metadata fields you want to add to the recommendation output documents. Leave blank and fill in the metadata fields if you want to fetch data from the training collection. Join field needs to be specified.",
      "hints": [
        "advanced"
      ]
    },
    "itemMetadataFormat": {
      "type": "string",
      "title": "Metdata format",
      "description": "The format of the metadata - solr, parquet etc.",
      "default": "solr",
      "hints": [
        "advanced"
      ],
      "minLength": 1
    },
    "itemMetadataJoinField": {
      "type": "string",
      "title": "Item Metadata Join Field",
      "description": "Name of field in the item metadata collection to join on.",
      "hints": [
        "advanced"
      ]
    },
    "performANN": {
      "type": "boolean",
      "title": "Perform approximate nearest neighbor search",
      "description": "Whether to perform approximate nearest neighbor search (ANN). ANN will drastically reduce training time, but accuracy will drop a little. Disable only if training dataset is very small.",
      "default": true
    },
    "maxNeighbors": {
      "type": "integer",
      "title": "Max neighbors for indexing",
      "description": "If perform ANN, size of the potential neighbors for the indexing phase. Higher value leads to better recall and shorter retrieval times (at the expense of longer indexing time).Reasonable range: 5~100",
      "hints": [
        "advanced"
      ],
      "maximum": 2000,
      "exclusiveMaximum": false,
      "minimum": 100,
      "exclusiveMinimum": false
    },
    "searchNN": {
      "type": "integer",
      "title": "Search Depth",
      "description": "If perform ANN, the depth of search used to find neighbors. Higher value improves recall at the expense of longer retrieval time.Reasonable range: 100~2000",
      "hints": [
        "advanced"
      ],
      "maximum": 2000,
      "exclusiveMaximum": false,
      "minimum": 100,
      "exclusiveMinimum": false
    },
    "indexNN": {
      "type": "integer",
      "title": "Indexing Depth",
      "description": "If perform ANN, the depth of constructed index. Higher value improves recall at the expense of longer indexing time.Reasonable range: 100~2000",
      "hints": [
        "advanced"
      ],
      "maximum": 2000,
      "exclusiveMaximum": false,
      "minimum": 100,
      "exclusiveMinimum": false
    },
    "factors": {
      "type": "integer",
      "title": "Dimension of latent factors",
      "description": "Latent factor dimension used for matrix decomposition. Bigger values require more time and memory but usually provide better results.",
      "default": 100,
      "hints": [
        "advanced"
      ],
      "minimum": 1,
      "exclusiveMinimum": false
    },
    "epochs": {
      "type": "integer",
      "title": "Training iterations",
      "description": "Number of model training iterations. Model will converge better with larger number at the expense of increased training time. For bigger datasets use smaller values.",
      "default": 30,
      "hints": [
        "advanced"
      ],
      "minimum": 1,
      "exclusiveMinimum": false
    },
    "learningRate": {
      "type": "number",
      "title": "Learning rate",
      "description": "Model learning rate.",
      "default": 0.05,
      "hints": [
        "advanced"
      ]
    },
    "metadataCategoryFields": {
      "type": "array",
      "title": "Metadata fields for item-item evaluation",
      "description": "These fields will be used for item-item evaluation and for determining if the recommendation pair belong to the same category.",
      "hints": [
        "advanced"
      ],
      "items": {
        "type": "string"
      }
    },
    "minNumItemUniqueClicks": {
      "type": "integer",
      "title": "Training Data Filtered By Popular Items",
      "description": "Items must have at least this no. of unique user interactions to be included for training and recommendations. The higher this value, the more popular items selected but the amount of training data will reduce.",
      "default": 2,
      "minimum": 1,
      "exclusiveMinimum": false
    },
    "minNumUserUniqueClicks": {
      "type": "integer",
      "title": "Training Data Filtered By User clicks",
      "description": "Users must have at least this no. of unique item interactions to be included for training and recommendations. The higher this value, the more active users are selected but the amount of training data will reduce.",
      "default": 2,
      "minimum": 1,
      "exclusiveMinimum": false
    },
    "minNumClickedProducts": {
      "type": "integer",
      "title": "Minimum Clicked Products",
      "description": "Minimum number of clicked products the user should have to be a candidate for the test set.",
      "default": 3,
      "minimum": 2,
      "exclusiveMinimum": false
    },
    "maxNumTestUsers": {
      "type": "integer",
      "title": "Maximum Test Users",
      "description": "Maximum number of test users to choose. If more users satisfying the Minimum Clicked Products criterion are present, the number will be capped to what is specified here.",
      "default": 10000,
      "minimum": 0,
      "exclusiveMinimum": false
    },
    "numTestUserClicks": {
      "type": "integer",
      "title": "Number of User Clicks for Test",
      "description": "How many test user clicks to use for testing. Should be less than the value for Minimum Clicked Products.",
      "default": 1,
      "minimum": 1,
      "exclusiveMinimum": false
    },
    "doEvaluation": {
      "type": "boolean",
      "title": "Evaluate on test data",
      "description": "Evaluate how well the trained model predicts user clicks. Test data will be sampled from original dataset."
    },
    "type": {
      "type": "string",
      "title": "Spark Job Type",
      "enum": [
        "argo-item-recommender-user"
      ],
      "default": "argo-item-recommender-user",
      "hints": [
        "readonly"
      ]
    }
  },
  "additionalProperties": true,
  "category": "Other",
  "categoryPriority": 1,
  "propertyGroups": [
    {
      "label": "Input/Output Parameters",
      "properties": [
        "trainingCollection",
        "trainingFormat",
        "outputUserRecsCollection",
        "outputItemSimCollection",
        "outputFormat",
        "outputBatchSize",
        "secretName",
        "partitionFields"
      ]
    },
    {
      "label": "Training Data Settings",
      "properties": [
        "trainingDataFilterQuery",
        "trainingSampleFraction",
        "userIdField",
        "itemIdField",
        "weightField",
        "trainingDataFrameConfigOptions"
      ]
    },
    {
      "label": "Model Tuning Parameters",
      "properties": [
        "numRecsPerUser",
        "numSimsPerItem",
        "filterClicked",
        "userTopkAnn",
        "minNumItemUniqueClicks",
        "minNumUserUniqueClicks",
        "maxIters",
        "deleteOldRecs",
        "excludeFromDeleteFilter",
        "performANN",
        "maxNeighbors",
        "searchNN",
        "indexNN",
        "factors",
        "epochs",
        "learningRate",
        "randomSeed"
      ]
    },
    {
      "label": "Evaluation Parameters",
      "properties": [
        "doEvaluation",
        "minNumClickedProducts",
        "numTestUserClicks",
        "maxNumTestUsers"
      ]
    },
    {
      "label": "Item Metadata Settings",
      "properties": [
        "itemMetadataCollection",
        "itemMetadataFormat",
        "itemMetadataJoinField",
        "itemMetadataFields",
        "metadataCategoryFields"
      ]
    }
  ]
}
